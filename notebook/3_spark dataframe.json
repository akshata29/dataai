{
	"name": "3_spark dataframe",
	"properties": {
		"folder": {
			"name": "WideWorldImport/03_machine learning"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "dataaispk",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "efd08eab-8759-4733-844f-dac655629e90"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"214c481d-157d-480b-b976-e72b0c5687a6": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "7bcfb8f0-d3ec-4fa9-b1b3-6d46f05920f5",
										"1": "2",
										"2": "820",
										"3": 2,
										"4": "33.280000000000000000",
										"5": "66.560000000000000000",
										"6": "20191204",
										"7": "22.660000000000000000",
										"8": 6,
										"9": 2,
										"10": "92"
									},
									{
										"0": "7bcfb8f0-d3ec-4fa9-b1b3-6d46f05920f5",
										"1": "2",
										"2": "1370",
										"3": 2,
										"4": "26.660000000000000000",
										"5": "53.320000000000000000",
										"6": "20191204",
										"7": "16.580000000000000000",
										"8": 6,
										"9": 2,
										"10": "92"
									},
									{
										"0": "7bcfb8f0-d3ec-4fa9-b1b3-6d46f05920f5",
										"1": "2",
										"2": "3071",
										"3": 1,
										"4": "39.220000000000000000",
										"5": "39.220000000000000000",
										"6": "20191204",
										"7": "12.380000000000000000",
										"8": 6,
										"9": 2,
										"10": "92"
									},
									{
										"0": "7bcfb8f0-d3ec-4fa9-b1b3-6d46f05920f5",
										"1": "2",
										"2": "3460",
										"3": 4,
										"4": "30.840000000000000000",
										"5": "123.360000000000000000",
										"6": "20191204",
										"7": "42.720000000000000000",
										"8": 6,
										"9": 2,
										"10": "92"
									},
									{
										"0": "7bcfb8f0-d3ec-4fa9-b1b3-6d46f05920f5",
										"1": "2",
										"2": "2975",
										"3": 1,
										"4": "33.240000000000000000",
										"5": "33.240000000000000000",
										"6": "20191204",
										"7": "11.190000000000000000",
										"8": 6,
										"9": 2,
										"10": "92"
									},
									{
										"0": "7bcfb8f0-d3ec-4fa9-b1b3-6d46f05920f5",
										"1": "2",
										"2": "4889",
										"3": 2,
										"4": "32.020000000000000000",
										"5": "64.040000000000000000",
										"6": "20191204",
										"7": "20.200000000000000000",
										"8": 6,
										"9": 2,
										"10": "92"
									},
									{
										"0": "7bcfb8f0-d3ec-4fa9-b1b3-6d46f05920f5",
										"1": "2",
										"2": "2333",
										"3": 1,
										"4": "19.220000000000000000",
										"5": "19.220000000000000000",
										"6": "20191204",
										"7": "5.540000000000000000",
										"8": 6,
										"9": 2,
										"10": "92"
									},
									{
										"0": "7bcfb8f0-d3ec-4fa9-b1b3-6d46f05920f5",
										"1": "2",
										"2": "105",
										"3": 1,
										"4": "34.360000000000000000",
										"5": "34.360000000000000000",
										"6": "20191204",
										"7": "10.510000000000000000",
										"8": 6,
										"9": 2,
										"10": "92"
									},
									{
										"0": "7bcfb8f0-d3ec-4fa9-b1b3-6d46f05920f5",
										"1": "2",
										"2": "6",
										"3": 1,
										"4": "28.310000000000000000",
										"5": "28.310000000000000000",
										"6": "20191204",
										"7": "8.770000000000000000",
										"8": 6,
										"9": 2,
										"10": "92"
									},
									{
										"0": "7bcfb8f0-d3ec-4fa9-b1b3-6d46f05920f5",
										"1": "2",
										"2": "144",
										"3": 3,
										"4": "30.480000000000000000",
										"5": "91.440000000000000000",
										"6": "20191204",
										"7": "24.270000000000000000",
										"8": 6,
										"9": 2,
										"10": "92"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "TransactionId",
										"type": "string"
									},
									{
										"key": "1",
										"name": "CustomerId",
										"type": "int"
									},
									{
										"key": "2",
										"name": "ProductId",
										"type": "smallint"
									},
									{
										"key": "3",
										"name": "Quantity",
										"type": "tinyint"
									},
									{
										"key": "4",
										"name": "Price",
										"type": "decimal"
									},
									{
										"key": "5",
										"name": "TotalAmount",
										"type": "decimal"
									},
									{
										"key": "6",
										"name": "TransactionDate",
										"type": "int"
									},
									{
										"key": "7",
										"name": "ProfitAmount",
										"type": "decimal"
									},
									{
										"key": "8",
										"name": "Hour",
										"type": "tinyint"
									},
									{
										"key": "9",
										"name": "Minute",
										"type": "tinyint"
									},
									{
										"key": "10",
										"name": "StoreId",
										"type": "smallint"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"1"
									],
									"isStacked": false
								}
							}
						}
					},
					"94e9d2f7-7a89-4fe3-9a81-0138040b632a": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "20191201",
										"1": "234",
										"2": "14223.910000000000000000",
										"3": "2.4982",
										"4": "1369"
									},
									{
										"0": "20191201",
										"1": "4846",
										"2": "2898.050000000000000000",
										"3": "2.5592",
										"4": "389"
									},
									{
										"0": "20191201",
										"1": "1693",
										"2": "430.660000000000000000",
										"3": "2.3462",
										"4": "61"
									},
									{
										"0": "20191201",
										"1": "3713",
										"2": "3328.380000000000000000",
										"3": "2.4276",
										"4": "369"
									},
									{
										"0": "20191201",
										"1": "798",
										"2": "581.400000000000000000",
										"3": "2.4516",
										"4": "76"
									},
									{
										"0": "20191201",
										"1": "1249",
										"2": "2829.510000000000000000",
										"3": "2.569",
										"4": "447"
									},
									{
										"0": "20191201",
										"1": "3614",
										"2": "2778.300000000000000000",
										"3": "2.52",
										"4": "378"
									},
									{
										"0": "20191201",
										"1": "263",
										"2": "494.140000000000000000",
										"3": "2.5833",
										"4": "62"
									},
									{
										"0": "20191201",
										"1": "4774",
										"2": "3940.650000000000000000",
										"3": "2.4695",
										"4": "405"
									},
									{
										"0": "20191201",
										"1": "3415",
										"2": "744.180000000000000000",
										"3": "2.4688",
										"4": "79"
									},
									{
										"0": "20191201",
										"1": "3382",
										"2": "514.500000000000000000",
										"3": "2.2581",
										"4": "70"
									},
									{
										"0": "20191201",
										"1": "3643",
										"2": "544.310000000000000000",
										"3": "2.5238",
										"4": "53"
									},
									{
										"0": "20191201",
										"1": "3451",
										"2": "650.590000000000000000",
										"3": "2.6176",
										"4": "89"
									},
									{
										"0": "20191201",
										"1": "4433",
										"2": "435.000000000000000000",
										"3": "2.5588",
										"4": "87"
									},
									{
										"0": "20191201",
										"1": "4857",
										"2": "1173.920000000000000000",
										"3": "2.5143",
										"4": "88"
									},
									{
										"0": "20191201",
										"1": "2769",
										"2": "638.220000000000000000",
										"3": "2.64",
										"4": "66"
									},
									{
										"0": "20191201",
										"1": "2588",
										"2": "611.100000000000000000",
										"3": "2.5",
										"4": "70"
									},
									{
										"0": "20191201",
										"1": "1945",
										"2": "736.300000000000000000",
										"3": "2.4667",
										"4": "74"
									},
									{
										"0": "20191201",
										"1": "1517",
										"2": "330.510000000000000000",
										"3": "2.5556",
										"4": "69"
									},
									{
										"0": "20191201",
										"1": "1810",
										"2": "656.750000000000000000",
										"3": "2.6296",
										"4": "71"
									},
									{
										"0": "20191201",
										"1": "533",
										"2": "406.870000000000000000",
										"3": "2.3462",
										"4": "61"
									},
									{
										"0": "20191201",
										"1": "830",
										"2": "566.890000000000000000",
										"3": "2.7667",
										"4": "83"
									},
									{
										"0": "20191201",
										"1": "1109",
										"2": "743.760000000000000000",
										"3": "2.5714",
										"4": "72"
									},
									{
										"0": "20191201",
										"1": "3712",
										"2": "509.960000000000000000",
										"3": "2.2593",
										"4": "61"
									},
									{
										"0": "20191201",
										"1": "833",
										"2": "925.120000000000000000",
										"3": "2.1852",
										"4": "59"
									},
									{
										"0": "20191201",
										"1": "430",
										"2": "504.810000000000000000",
										"3": "2.6333",
										"4": "79"
									},
									{
										"0": "20191201",
										"1": "210",
										"2": "17490.000000000000000000",
										"3": "2.5422",
										"4": "1749"
									},
									{
										"0": "20191201",
										"1": "1173",
										"2": "3138.200000000000000000",
										"3": "2.5549",
										"4": "442"
									},
									{
										"0": "20191201",
										"1": "4364",
										"2": "385.920000000000000000",
										"3": "2.5714",
										"4": "72"
									},
									{
										"0": "20191201",
										"1": "427",
										"2": "2958.000000000000000000",
										"3": "2.5758",
										"4": "425"
									},
									{
										"0": "20191201",
										"1": "3086",
										"2": "525.600000000000000000",
										"3": "2.5806",
										"4": "80"
									},
									{
										"0": "20191201",
										"1": "1359",
										"2": "4410.940000000000000000",
										"3": "2.4108",
										"4": "446"
									},
									{
										"0": "20191201",
										"1": "2955",
										"2": "626.400000000000000000",
										"3": "2.4167",
										"4": "58"
									},
									{
										"0": "20191201",
										"1": "579",
										"2": "599.060000000000000000",
										"3": "2.8519",
										"4": "77"
									},
									{
										"0": "20191201",
										"1": "2734",
										"2": "906.460000000000000000",
										"3": "2.44",
										"4": "61"
									},
									{
										"0": "20191201",
										"1": "4253",
										"2": "589.600000000000000000",
										"3": "2.2857",
										"4": "80"
									},
									{
										"0": "20191201",
										"1": "1374",
										"2": "743.030000000000000000",
										"3": "2.68",
										"4": "67"
									},
									{
										"0": "20191201",
										"1": "1982",
										"2": "670.600000000000000000",
										"3": "2.3333",
										"4": "70"
									},
									{
										"0": "20191201",
										"1": "1196",
										"2": "368.280000000000000000",
										"3": "2.3846",
										"4": "62"
									},
									{
										"0": "20191201",
										"1": "3484",
										"2": "540.640000000000000000",
										"3": "2.48",
										"4": "62"
									},
									{
										"0": "20191201",
										"1": "1802",
										"2": "432.390000000000000000",
										"3": "2.4483",
										"4": "71"
									},
									{
										"0": "20191201",
										"1": "790",
										"2": "599.080000000000000000",
										"3": "2.8333",
										"4": "68"
									},
									{
										"0": "20191201",
										"1": "4499",
										"2": "629.060000000000000000",
										"3": "2.4483",
										"4": "71"
									},
									{
										"0": "20191201",
										"1": "2526",
										"2": "615.030000000000000000",
										"3": "2.6774",
										"4": "83"
									},
									{
										"0": "20191201",
										"1": "604",
										"2": "969.000000000000000000",
										"3": "2.8571",
										"4": "100"
									},
									{
										"0": "20191201",
										"1": "4554",
										"2": "321.950000000000000000",
										"3": "2.35",
										"4": "47"
									},
									{
										"0": "20191201",
										"1": "4962",
										"2": "583.440000000000000000",
										"3": "2.3636",
										"4": "78"
									},
									{
										"0": "20191201",
										"1": "395",
										"2": "542.100000000000000000",
										"3": "2.6",
										"4": "65"
									},
									{
										"0": "20191201",
										"1": "4952",
										"2": "3134.760000000000000000",
										"3": "2.5167",
										"4": "453"
									},
									{
										"0": "20191201",
										"1": "3559",
										"2": "711.040000000000000000",
										"3": "2.75",
										"4": "88"
									},
									{
										"0": "20191201",
										"1": "565",
										"2": "5419.430000000000000000",
										"3": "2.6257",
										"4": "449"
									},
									{
										"0": "20191201",
										"1": "1891",
										"2": "696.150000000000000000",
										"3": "2.4074",
										"4": "65"
									},
									{
										"0": "20191201",
										"1": "1830",
										"2": "3688.080000000000000000",
										"3": "2.5066",
										"4": "381"
									},
									{
										"0": "20191201",
										"1": "3779",
										"2": "677.040000000000000000",
										"3": "2.8966",
										"4": "84"
									},
									{
										"0": "20191201",
										"1": "3887",
										"2": "2773.230000000000000000",
										"3": "2.4454",
										"4": "291"
									},
									{
										"0": "20191201",
										"1": "730",
										"2": "1029.000000000000000000",
										"3": "2.45",
										"4": "98"
									},
									{
										"0": "20191201",
										"1": "776",
										"2": "421.880000000000000000",
										"3": "2.5238",
										"4": "53"
									},
									{
										"0": "20191201",
										"1": "4617",
										"2": "2501.420000000000000000",
										"3": "2.3974",
										"4": "362"
									},
									{
										"0": "20191201",
										"1": "3472",
										"2": "494.640000000000000000",
										"3": "2.88",
										"4": "72"
									},
									{
										"0": "20191201",
										"1": "3073",
										"2": "2832.690000000000000000",
										"3": "2.4015",
										"4": "329"
									},
									{
										"0": "20191201",
										"1": "1423",
										"2": "467.840000000000000000",
										"3": "2.3704",
										"4": "64"
									},
									{
										"0": "20191201",
										"1": "3422",
										"2": "594.000000000000000000",
										"3": "2.8387",
										"4": "88"
									},
									{
										"0": "20191201",
										"1": "4306",
										"2": "547.300000000000000000",
										"3": "2.1667",
										"4": "65"
									},
									{
										"0": "20191201",
										"1": "4140",
										"2": "670.140000000000000000",
										"3": "2.3548",
										"4": "73"
									},
									{
										"0": "20191201",
										"1": "3784",
										"2": "587.160000000000000000",
										"3": "2.25",
										"4": "63"
									},
									{
										"0": "20191201",
										"1": "656",
										"2": "413.400000000000000000",
										"3": "2.6897",
										"4": "78"
									},
									{
										"0": "20191201",
										"1": "3089",
										"2": "384.480000000000000000",
										"3": "2.1818",
										"4": "48"
									},
									{
										"0": "20191201",
										"1": "1879",
										"2": "653.480000000000000000",
										"3": "2.3846",
										"4": "62"
									},
									{
										"0": "20191201",
										"1": "3899",
										"2": "529.760000000000000000",
										"3": "2.3158",
										"4": "44"
									},
									{
										"0": "20191201",
										"1": "1322",
										"2": "404.820000000000000000",
										"3": "2.6",
										"4": "78"
									},
									{
										"0": "20191201",
										"1": "2009",
										"2": "342.320000000000000000",
										"3": "2.2",
										"4": "44"
									},
									{
										"0": "20191201",
										"1": "1520",
										"2": "671.470000000000000000",
										"3": "2.5938",
										"4": "83"
									},
									{
										"0": "20191201",
										"1": "2851",
										"2": "2121.000000000000000000",
										"3": "2.5897",
										"4": "404"
									},
									{
										"0": "20191201",
										"1": "2829",
										"2": "380.240000000000000000",
										"3": "2.1538",
										"4": "56"
									},
									{
										"0": "20191201",
										"1": "3072",
										"2": "3434.200000000000000000",
										"3": "2.4778",
										"4": "446"
									},
									{
										"0": "20191201",
										"1": "3426",
										"2": "4225.080000000000000000",
										"3": "2.6346",
										"4": "411"
									},
									{
										"0": "20191201",
										"1": "3441",
										"2": "5141.250000000000000000",
										"3": "2.4351",
										"4": "375"
									},
									{
										"0": "20191201",
										"1": "3515",
										"2": "621.360000000000000000",
										"3": "1.9459",
										"4": "72"
									},
									{
										"0": "20191201",
										"1": "1172",
										"2": "2509.040000000000000000",
										"3": "2.3407",
										"4": "316"
									},
									{
										"0": "20191201",
										"1": "1097",
										"2": "4284.140000000000000000",
										"3": "2.4913",
										"4": "431"
									},
									{
										"0": "20191201",
										"1": "1726",
										"2": "599.420000000000000000",
										"3": "2.3243",
										"4": "86"
									},
									{
										"0": "20191201",
										"1": "271",
										"2": "767.360000000000000000",
										"3": "2.6667",
										"4": "88"
									},
									{
										"0": "20191201",
										"1": "3380",
										"2": "674.790000000000000000",
										"3": "2.7667",
										"4": "83"
									},
									{
										"0": "20191201",
										"1": "2525",
										"2": "338.800000000000000000",
										"3": "2.5455",
										"4": "56"
									},
									{
										"0": "20191201",
										"1": "1973",
										"2": "826.020000000000000000",
										"3": "2.8889",
										"4": "78"
									},
									{
										"0": "20191201",
										"1": "4059",
										"2": "537.600000000000000000",
										"3": "2.625",
										"4": "84"
									},
									{
										"0": "20191201",
										"1": "4180",
										"2": "384.450000000000000000",
										"3": "2.5",
										"4": "55"
									},
									{
										"0": "20191201",
										"1": "996",
										"2": "539.240000000000000000",
										"3": "2.5185",
										"4": "68"
									},
									{
										"0": "20191201",
										"1": "3514",
										"2": "938.730000000000000000",
										"3": "2.6774",
										"4": "83"
									},
									{
										"0": "20191201",
										"1": "1434",
										"2": "442.060000000000000000",
										"3": "2.3846",
										"4": "62"
									},
									{
										"0": "20191201",
										"1": "2655",
										"2": "487.210000000000000000",
										"3": "2.5938",
										"4": "83"
									},
									{
										"0": "20191201",
										"1": "187",
										"2": "10664.000000000000000000",
										"3": "2.5203",
										"4": "1240"
									},
									{
										"0": "20191201",
										"1": "4915",
										"2": "631.040000000000000000",
										"3": "2.3448",
										"4": "68"
									},
									{
										"0": "20191201",
										"1": "1294",
										"2": "546.340000000000000000",
										"3": "2.36",
										"4": "59"
									},
									{
										"0": "20191201",
										"1": "2328",
										"2": "4695.720000000000000000",
										"3": "2.2866",
										"4": "359"
									},
									{
										"0": "20191201",
										"1": "4025",
										"2": "3183.660000000000000000",
										"3": "2.5556",
										"4": "414"
									},
									{
										"0": "20191201",
										"1": "4709",
										"2": "1855.620000000000000000",
										"3": "2.4853",
										"4": "338"
									},
									{
										"0": "20191201",
										"1": "3125",
										"2": "4782.540000000000000000",
										"3": "2.4125",
										"4": "386"
									},
									{
										"0": "20191201",
										"1": "89",
										"2": "11227.160000000000000000",
										"3": "2.472",
										"4": "1414"
									},
									{
										"0": "20191201",
										"1": "1660",
										"2": "3378.180000000000000000",
										"3": "2.5068",
										"4": "366"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "TransactionDate",
										"type": "int"
									},
									{
										"key": "1",
										"name": "ProductId",
										"type": "smallint"
									},
									{
										"key": "2",
										"name": "(sum)ProfitAmount",
										"type": "decimal"
									},
									{
										"key": "3",
										"name": "(avg)Quantity",
										"type": "double"
									},
									{
										"key": "4",
										"name": "(sum)Quantity",
										"type": "bigint"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"1"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/e2171f6d-2650-45e6-af7e-6d6e44ca92b1/resourceGroups/dataai/providers/Microsoft.Synapse/workspaces/dataaisynapsewks/bigDataPools/dataaispk",
				"name": "dataaispk",
				"type": "Spark",
				"endpoint": "https://dataaisynapsewks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/dataaispk",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.2",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Working with Spark DataFrames in Synapse Spark"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Working with schemas and lake databases\r\n",
					"\r\n",
					"Use `spark.read.csv()` to load the data from the source public blob storage account and display its schema and shape."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.types import *\r\n",
					"import numpy as np\r\n",
					"import pandas as pd"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"manualSchema = StructType([\r\n",
					"  StructField(\"CustomerId\", StringType(), True),\r\n",
					"  StructField(\"ProductId\", StringType(), True),\r\n",
					"  StructField(\"Rating\", LongType(), True),\r\n",
					"  StructField(\"Cost\", FloatType(), True),\r\n",
					"  StructField(\"Size\", FloatType(), True),\r\n",
					"  StructField(\"Price\", FloatType(), True),\r\n",
					"  StructField(\"PrimaryBrandId\", LongType(), True),\r\n",
					"  StructField(\"GenderId\", LongType(), True),\r\n",
					"  StructField(\"MaritalStatus\", LongType(), True),\r\n",
					"  StructField(\"LowerIncomeBound\", FloatType(), True),\r\n",
					"  StructField(\"UpperIncomeBound\", FloatType(), True)\r\n",
					"])"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"source": [
					"url = \"abfss://wwi-02@dataairawdls.dfs.core.windows.net/data/PersonalizedData.csv\"\r\n",
					"raw_data = spark.read.csv(url, header=True, schema=manualSchema)\r\n",
					"print(\"Schema: \")\r\n",
					"raw_data.printSchema()\r\n",
					"\r\n",
					"df = raw_data.toPandas()\r\n",
					"print(\"Shape: \", df.shape)"
				],
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Create a new Lake Database. Observe the use of the `%%spark` magic to switch the language of the cell to Scala."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					}
				},
				"source": [
					"%%spark\r\n",
					"spark.sql(\"CREATE DATABASE IF NOT EXISTS Customers\")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Save the dataframe as a table in the newly created database."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"raw_data.write.mode(\"overwrite\").saveAsTable(\"Customers.Customer\")"
				],
				"execution_count": 6
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Observe the newly created database and table. You can find them by navigating in Synapse Studio to the `Data` hub, and selecting the `Lake database` group from the `Workspace` section.\r\n",
					"\r\n",
					"If you rightclick on the table, and select the `New SQL script` option, you will be able to run a SQL query on the table using the serverless SQL pool. This shows how the Spark and Serverless SQL runtimes share the schema information of the lake database.\r\n",
					"\r\n",
					"![Newly created lake database and table](https://solliancepublicdata.blob.core.windows.net/synapse-l400/notebook-images/customers-lake-database.png)"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Spark DataFrame operations\r\n",
					"\r\n",
					"Load another DataFrame, this time from multiple folders located in the Synapse workspace data lake."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df_sales = spark.read.load('abfss://wwi-02@dataairawdls.dfs.core.windows.net/sale-small/Year=2019/Quarter=Q4/Month=12/*/*.parquet', format='parquet')\r\n",
					"display(df_sales.limit(10))"
				],
				"execution_count": 7
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Apache Spark evaluates the file contents to infer the schema. This automatic inference is sufficient for data exploration and most transformation tasks. However, when you load data to an external resource like a SQL pool table, sometimes you need to declare your own schema and apply that to the dataset."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_sales.printSchema()"
				],
				"execution_count": 8
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Apply grouping and aggregation operations to find daily total quantity, average quantity, and total profit, per product.\r\n",
					"\r\n",
					"Observe how applying the operations to the DataFrame has no effect yet. This is because the chain does not end with an operation that would force the materialization (execution) of the chain of operations."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"from pyspark.sql.types import *\r\n",
					"from pyspark.sql.functions import *\r\n",
					"\r\n",
					"profitByDateProduct = (df_sales.groupBy(\"TransactionDate\",\"ProductId\")\r\n",
					"    .agg(\r\n",
					"        sum(\"ProfitAmount\").alias(\"(sum)ProfitAmount\"),\r\n",
					"        round(avg(\"Quantity\"), 4).alias(\"(avg)Quantity\"),\r\n",
					"        sum(\"Quantity\").alias(\"(sum)Quantity\"))\r\n",
					"    .orderBy(\"TransactionDate\"))"
				],
				"execution_count": 9
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Call `limit()` to materialize the operations."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(profitByDateProduct.limit(100))"
				],
				"execution_count": 10
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## DataFrame partitions"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Check the number of partitions automatically determined by Spark."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_sales.rdd.getNumPartitions()"
				],
				"execution_count": 11
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Repartition the Spark dataframe (reorganize it into 10 partitions)."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_sales = df_sales.repartition(10)\r\n",
					"df_sales.rdd.getNumPartitions()"
				],
				"execution_count": 12
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Persist the Spark dataframe to the data lake storage. Once execution completes, check the `/temp/sales1` data lake location to confirm the write operation generated 10 separate Parquet files (according to the new number of partitions)."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_sales.write.mode('overwrite').parquet('abfss://wwi-02@dataairawdls.dfs.core.windows.net/temp/sales1')"
				],
				"execution_count": 13
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Repartition again the dataframe, this time based on the values of the `TransactionDate` column. Once execution completes, check the `/temp/sales2` data lake location to confirm the write operation generated 31 separate Parquet files organized in subfolders named after the values of the `TransactionDate` column."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_sales.write.partitionBy('TransactionDate').mode('overwrite').parquet('abfss://wwi-02@dataairawdls.dfs.core.windows.net/temp/sales2')"
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				]
			}
		]
	}
}